- name: Set lab ipmi password fact
  set_fact:
    lab_ipmi_user:  "{{ ocpinv_content.nodes[0].pm_user }}"

- name: Set lab ipmi password fact
  set_fact:
    lab_ipmi_password:  "{{ ocpinv_content.nodes[0].pm_password }}"

- name: check if os installed as root user
  shell: |
    sshpass -p {{ ansible_ssh_pass }}  ssh -o 'PreferredAuthentications=password' -o 'StrictHostKeyChecking=no' -o 'UserKnownHostsFile=/dev/null' -q root@{{ provisioner_hostname }} 'cat /etc/redhat-release'
  register: rhel_release
  ignore_errors: true

- name: set rhel version
  set_fact:
    rhel_version: "{{ rhel_release.stdout.split()[-2] }}"
  ignore_errors: true
  when: rhel_release.stdout | length > 0

- name: set os_install
  set_fact:
    os_install: "{{ (rhel_version is version('8.1', '<') or rebuild_provisioner) | ternary('RHEL 8.1', false) }}"

- name: Perform OS install if needed
  block:
    - name: Install Podman
      yum:
        name: podman
        state: present
      become: true

    - name: Get Badfish pod image
      podman_image:
        name: "{{ badfish_pod_image }}"
        pull: yes
        force: yes

    - name: Build the hammercli image
      shell: podman build --build-arg foreman_url={{ foreman_url }} -t hammercli .
      args:
        chdir: "{{ role_path}}/files/"

    - name: update host to install new os (scale lab)
      shell: podman run hammercli hammer -u {{ cloud_name }} -p {{ lab_ipmi_password }}  host update --name {{ provisioner_hostname }} --build 1 --operatingsystem '{{ os_install }}' --overwrite 1
      when: lab_name == "scale"

    - name: update host to install new os (alias lab)
      shell: podman run hammercli hammer -u {{ cloud_name }} -p {{ lab_ipmi_password }}  host update --name {{ provisioner_hostname }} --build 1 --operatingsystem '{{ os_install }}' --medium '{{ os_install }}' --partition-table 'ALIAS-Partition' --overwrite 1
      when: lab_name == "alias"

    - name: Set provisioner host to foreman boot order
      shell: |
        {{ badfish_cmd }}{{ provisioner_hostname }} -t foreman

    - name: Set provisioner host to reboot
      shell: |
        {{ badfish_cmd }}{{ provisioner_hostname }} --power-cycle

    - name: wait for 420 seconds before checking for provisioner
      wait_for:
        timeout: 420

    - name: waiting for the provisioner to be available
      wait_for:
        port: 22
        host: "{{ provisioner_hostname }}"
        search_regex: OpenSSH
        timeout: 30
      register: node_reachable
      retries: 100
      until: node_reachable is succeeded
  when: ((os_install is defined) and (os_install != false)) or rebuild_provisioner
